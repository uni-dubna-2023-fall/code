Алгоритм бинарного поиска в упорядоченном массиве.

Алгоритм бинарного поиска используется для поиска значения в отсортированном массиве за время O(log n), что делает его гораздо более эффективным, чем линейный поиск.

Алгоритм бинарного поиска состоит из следующих шагов:

1. Определите индекс середины отсортированного массива, округляя вниз, если индекс нечетный.
2. Сравните искомое значение с элементом середины массива. Если значение равно элементу середины, то поиск окончен. Если искомое значение меньше, чем значение середины, то повторите процедуру бинарного поиска на левой половине массива, иначе повторите на правой половине массива.
3. Повторяйте шаги 1 и 2, пока не будет найдено искомое значение.

Пример реализации алгоритма бинарного поиска на языке Python:

def binary_search(arr, x):
    low = 0
    high = len(arr) - 1
    mid = 0
 
    while low <= high:
        mid = (high + low) // 2
 
        if arr[mid] < x:
            low = mid + 1
 
        elif arr[mid] > x:
            high = mid - 1
 
        else:
            return mid
 
    return -1


Здесь переменная low указывает на первый индекс в массиве, а переменная high указывает на последний индекс. Переменная mid вычисляется как индекс в середине массива с помощью оператора целочисленного деления //.

Алгоритм продолжает делить массив пополам и смотреть на средний элемент, пока не будет найдено искомое значение или пока не будет установлено, что искомое значение в массиве отсутствует. В последнем случае алгоритм возвращает -1.